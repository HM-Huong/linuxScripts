#! /bin/bash
# htrans - a bash script to translate text from the clipboard, selected text, or text on the screen
# you can assign keyboard shortcuts to this script to translate text from the clipboard or text on the screen
# Translate:
# 	- text from the clipboard or selected text: htrans -t
# 	- translate and speak: htrans -tl
# 	- text on the screen: htrans -tx
# 	- look up a selected word on Oxford Learner's Dictionary: htrans -b

notInstalledPackages=""
neededPackages=("xclip" "mpv" "wmctrl")

# log function
log() {
	echo "$(date '+%Y-%m-%d %H:%M:%S') $1" >>~/htrans.log
}

for package in "${neededPackages[@]}"; do
	if ! command -v $package &>/dev/null; then
		# echo $package
		notInstalledPackages+=" $package"
	fi
done

if ! command -v trans &>/dev/null; then
	notInstalledPackages+=" translate-shell"
fi

if [ ! -z "$notInstalledPackages" ]; then
	echo "You need to install the following package(s):$notInstalledPackages"
	read -p "Do you want to continue? [y/N] " -n 1 -r confirm && [[ $confirm == [yY] ]] || exit 0
	sudo apt install $notInstalledPackages
fi

listen_f=false
translate_f=false
browser_f=false
source_text=""
oxford_f=false
while getopts xoltbs: flag; do
	case "${flag}" in
	l) listen_f=true ;;
	o) oxford_f=true ;;
	x) source_text="$(xtext -r)" ;;
	t) translate_f=true ;;
	b) browser_f=true ;;
	s) source_text="$OPTARG" ;;
	esac
done

if [ -z "$source_text" ]; then # If source_text is empty
	# assign source_text to the primary clipboard content
	source_text="$(xclip -o -selection primary)"
	# escape \ characters with \\
	source_text="${source_text//\\/\\\\}"
	# rejoin the words that are split across lines (which has a hypen at the end of its line)
	source_text="${source_text//$'-\n'/}"
	# replace new line with space
	source_text="${source_text//$'\n'/ }"
fi

if $translate_f; then
	translation="$(trans en:vi -b -- "$source_text")"
	title="HMH Translator:    en  ->  vi"
	wmctrl -F -c "$title" # Close previous HMH translate window
	zenity --info --title="$title" --text "<span face='sans'>$source_text\n<span color='#87CEEB'>__________________________________________________________________</span>\n\n<span font='14'>$translation</span></span>" &
	(sleep 0.12 && wmctrl -F -r "$title" -b add,above && wmctrl -F -r "$title" -e 0,2,32,-1,-1) & # Make HMH translate window on top
fi

if $listen_f; then
	trans -no-translate -speak -s en -- "$source_text" &
fi

# open browser
open_browser() {
	local hasBrowser=false
	if command -v microsoft-edge &>/dev/null; then
		microsoft-edge --app="$1"
		hasBrowser=true
	elif command -v google-chrome &>/dev/null; then
		google-chrome --app="$1"
		hasBrowser=true
	fi

	if $hasBrowser; then
		sleep 0.12 && wmctrl -r :ACTIVE: -e 0,999,32,800,800 &
	fi
}

if $browser_f; then
	# close window that contains "OxfordLearnersDictionaries.com" or "Google Translate" in its title
	wmctrl -c "OxfordLearnersDictionaries.com"
	wmctrl -Fc "Google Translate"
	
	# convert source_text (have unicode characters) to url encoded text using jq
	text_ascii="$(echo "$source_text" | jq -sRr @uri)"
	# log "$source_text"
	# log "$text_ascii"

	# if source_text is a single word (does not contain " ") and oxford_f is true
	if [[ ${text_ascii} != *"%20"* && $oxford_f == true ]]; then
		open_browser "https://www.oxfordlearnersdictionaries.com/definition/english/$text_ascii"
	else
		open_browser "https://translate.google.com/?sl=en&tl=vi&text=$text_ascii&op=translate"
	fi
fi
