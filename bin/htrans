#! /bin/bash

notInstalledPackages=""
neededPackages=("xclip" "mpv" "wmctrl")

for package in "${neededPackages[@]}"
do
		if ! command -v $package &> /dev/null
		then
    # echo $package
			notInstalledPackages+=" $package"
		fi
done

if ! command -v trans &> /dev/null
then
	notInstalledPackages+=" translate-shell"
fi

if [ ! -z "$notInstalledPackages" ]
then
	echo "You need to install the following package(s):$notInstalledPackages"
	read -p "Do you want to continue? [y/N] " -n 1 -r confirm && [[ $confirm == [yY] ]] || exit 0
	sudo apt install $notInstalledPackages
fi


listen=false
translate=false
browser=false
source=""
while getopts ltbs: flag
do
	case "${flag}" in
		l) listen=true;;
		t) translate=true;;
		b) browser=true;;
		s) source="$OPTARG"
	esac
done

if [ -z "$source" ] # If source is empty
then
	# assign source to the primary clipboard content
	source="$(xclip -o -selection primary)"
	# escape \ characters with \\
	source="${source//\\/\\\\}"
	# rejoin the words that are split across lines (which has a hypen at the end of its line)
	source="${source//$'-\n'}"
	# replace new line with space
	source="${source//$'\n'/ }"
fi

if $translate
then
	translation="$(trans en:vi -b -- "$source")"
	wmctrl -F -c "HMH Translation" # Close previous HMH translate window
	zenity --info --title="HMH Translation" --text "$source\n__________________________________________________________________\n\n$translation" &
	(sleep 0.1 && wmctrl -F -r 'HMH Translation' -b add,above -e 0,2,32,-1,-1) & # Make HMH translate window on top
	
fi 

if $listen
then
	trans -no-translate -speak -s en -- "$source" &
fi

if $browser
then
	# if source does not contain " " or it's a single word
	if [[ ${source} != *" "* ]]
	then
		browserIsOpenned=false
		# close window that contains "OxfordLearnersDictionaries.com" in its title
		wmctrl -c "OxfordLearnersDictionaries.com"
		if command -v microsoft-edge &> /dev/null
		then
			microsoft-edge --app="https://www.oxfordlearnersdictionaries.com/definition/english/$source"
			browserIsOpenned=true
		elif command -v google-chrome &> /dev/null
		then
			google-chrome --app="https://www.oxfordlearnersdictionaries.com/definition/english/$source"
			browserIsOpenned=true
		fi

		if $browserIsOpened
		then
			sleep 0.1 && wmctrl -r :ACTIVE: -e 0,2,32,800,800 &
		fi 

	fi
fi